filter(!is.na(BROJ_OZLEDA)) %>%
ggplot(aes(x= BROJ_OZLEDA)) +
geom_bar() +
ggtitle('Prikaz broja ozleda') + xlab('Broj ozleda') +
ylab('Frekvencija')
sum(is.na(d4$ŽIVOTINJA))
table(d4$ŽIVOTINJA)
prop.table(table(d4$ŽIVOTINJA))
d4 %>%
filter(!is.na(ŽIVOTINJA)) %>%
ggplot(aes(y= ŽIVOTINJA)) +
geom_bar() +
ggtitle('Broj ozleda nastao od određenih životinja') + xlab('Životinja') +
ylab('Frekvencija')
sum(is.na(d4$LOT_VAKCINE))
table(d4$LOT_VAKCINE)
prop.table(table(d4$LOT_VAKCINE))
d4 %>%
filter(!is.na(LOT_VAKCINE)) %>%
ggplot(aes(y= LOT_VAKCINE)) +
geom_bar() +
ggtitle('Broj ozleda nastao od određenih životinja') + xlab('Vaccine lot') +
ylab('Count')
table(d4$TITER)
d4 %>%
filter(!is.na(TITER)) %>%
ggplot(aes(x= TITER)) +
geom_histogram(binwidth = 1, color = 'white') +
ggtitle('Histogram godina rođenja pacijenata') + xlab('TITER') +
ylab('COUNT')
shapiro.test(d4$TITER)
d4$TITER <- remove_outliers(d4$TITER)
table(d4$USPESNO_IMUNIZOVAN, d4$POL)
chisq.test(d4$POL, d4$USPESNO_IMUNIZOVAN, correct=FALSE)
d4 %>%
filter(!is.na(POL)) %>%
ggplot(aes(x=USPESNO_IMUNIZOVAN, fill=POL)) +
geom_bar() + ggtitle('Odnos pola i uspešnosti imunizacije') +
xlab('Uspešno imunizovan') + ylab('Frekvencija') +
scale_fill_discrete('Pol')
shapiro.test(d4$STAROST)
wilcox.test(d4$STAROST ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=STAROST)) +
geom_boxplot(outlier.shape = NA) + ggtitle('Uspešnost imunizacije u odnosu na starost') +
xlab('Uspešno imunizovan') +
ylab('Starost') +
annotate(geom="text", label="p < 0.01 **")
table(d4$USPESNO_IMUNIZOVAN, d4$USTANOVA_POSILJALAC_UZORKA)
#install.packages("chisq.posthoc.test")
library(chisq.posthoc.test)
#install.packages("ggstatsplot")
library(ggstatsplot)
chisq.test(d4$USTANOVA_POSILJALAC_UZORKA, d4$USPESNO_IMUNIZOVAN, correct=TRUE)
chisq.posthoc.test(table(d4$USPESNO_IMUNIZOVAN, d4$USTANOVA_POSILJALAC_UZORKA)
, method = "none")
chisq.posthoc.test(table(d4$USPESNO_IMUNIZOVAN, d4$USTANOVA_POSILJALAC_UZORKA)
, method = "bonferroni")
d4 %>%
filter(!is.na(USTANOVA_POSILJALAC_UZORKA)) %>%
ggplot(aes(x=USPESNO_IMUNIZOVAN, fill=USTANOVA_POSILJALAC_UZORKA)) +
geom_bar() + ggtitle('Uspešnost imunizacije u odnosu na ustanovu') +
xlab('Uspešno imunizovan') + ylab('Frekvencija') +
scale_fill_discrete('Ustanova')
# USPESNO_IMUNIZOVAN i TRAJANJE_VAKCINACIJE
shapiro.test(d4$TRAJANJE_VAKCINACIJE)
wilcox.test(d4$TRAJANJE_VAKCINACIJE ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(TRAJANJE_VAKCINACIJE)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=TRAJANJE_VAKCINACIJE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Vaccination duration and successful immunization boxplot') +
xlab('Successful immunization') +
ylab('Vaccination duration (days)')
# USPESNO_IMUNIZOVAN i RAZLIKA_PRIJEMA_I_UZORKOVANJA
shapiro.test(d4$RAZLIKA_PRIJEMA_I_UZORKOVANJA)
wilcox.test(d4$RAZLIKA_PRIJEMA_I_UZORKOVANJA ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(RAZLIKA_PRIJEMA_I_UZORKOVANJA)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=RAZLIKA_PRIJEMA_I_UZORKOVANJA)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na vreme proteklo od prijema do uzorkovanja') +
xlab('Uspešno imunizovan') +
ylab('Razlika prijema i uzorkovanja uzorka (dani)')
# USPESNO_IMUNIZOVAN i RAZLIKA_PRIJEMA_I_POCETKA
shapiro.test(d4$RAZLIKA_PRIJEMA_I_POCETKA)
wilcox.test(d4$RAZLIKA_PRIJEMA_I_POCETKA ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(RAZLIKA_PRIJEMA_I_POCETKA)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=RAZLIKA_PRIJEMA_I_POCETKA)) +
geom_boxplot() +
ggtitle('Uspešnost imunizacije u odnosu na vreme proteklo od prijema do početka analiza') +
xlab('Uspešno imunizovan') +
ylab('Razlika prijema i analize uzorka (dani)')
# USPESNO_IMUNIZOVAN i RAZLIKA_UZORKOVANJA_I_POCETKA
shapiro.test(d4$RAZLIKA_UZORKOVANJA_I_POCETKA)
wilcox.test(d4$RAZLIKA_UZORKOVANJA_I_POCETKA ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(RAZLIKA_UZORKOVANJA_I_POCETKA)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=RAZLIKA_UZORKOVANJA_I_POCETKA)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na vreme proteklo od uzorkovanja do početka analize') +
xlab('Uspešno imunizovan') +
ylab('Razlika uzorkovanja i analize uzorka (dani)')
# USPESNO_IMUNIZOVAN i RAZLIKA_ZAVRSETKA_VAK_I_POCETKA_ANA
shapiro.test(d4$RAZLIKA_ZAVRSETKA_VAK_I_POCETKA_ANA)
wilcox.test(d4$RAZLIKA_ZAVRSETKA_VAK_I_POCETKA_ANA ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(RAZLIKA_ZAVRSETKA_VAK_I_POCETKA_ANA)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=RAZLIKA_ZAVRSETKA_VAK_I_POCETKA_ANA)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na vreme proteklo od završetka vakcinacije do početka analize') +
xlab('Uspešno imunizovan') +
ylab('Razlika završetka vakcinacije i početka analize (dani)')
# USPESNO_IMUNIZOVAN i RAZLIKA_POCETKA_VAK_I_ISPITIVANJA
shapiro.test(d4$RAZLIKA_POCETKA_VAK_I_ISPITIVANJA)
wilcox.test(d4$RAZLIKA_POCETKA_VAK_I_ISPITIVANJA ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(RAZLIKA_POCETKA_VAK_I_ISPITIVANJA)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=RAZLIKA_POCETKA_VAK_I_ISPITIVANJA)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na vreme proteklo od početka vakcinacije do početka analize') +
xlab('Uspešno imunizovan') +
ylab('Razlika početka vakcinacije i početka analize (dani)')
shapiro.test(d4$UKUPNO_DANA_OD_VADJENJA_KRVI)
wilcox.test(d4$UKUPNO_DANA_OD_VADJENJA_KRVI ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(UKUPNO_DANA_OD_VADJENJA_KRVI)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=UKUPNO_DANA_OD_VADJENJA_KRVI)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na vreme proteklo od vađenja krvi') +
xlab('Uspešno imunizovan') +
ylab('Ukupno dana od vađenja krvi') +
ylim(0,20)
table(d4$USPESNO_IMUNIZOVAN, d4$DAT_SERUM)
chisq.test(d4$DAT_SERUM, d4$USPESNO_IMUNIZOVAN, correct=FALSE)
d4 %>%
filter(!is.na(DAT_SERUM)) %>%
ggplot(aes(x=USPESNO_IMUNIZOVAN, fill=DAT_SERUM)) +
geom_bar() + ggtitle('Uspesnost imunizacije u odnosu na davanje seruma') +
xlab('Uspešno imunizovan') + ylab('Frekvencija') +
scale_fill_discrete('Dat serum')
# USPESNO_IMUNIZOVAN i BROJ JEDINICA
shapiro.test(d4$BROJ_JEDINICA)
wilcox.test(d4$BROJ_JEDINICA ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(BROJ_JEDINICA)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=BROJ_JEDINICA)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na broj jedinica') +
xlab('Uspešno imunizovan') +
ylab('Broj jedinica')
table(d4$USPESNO_IMUNIZOVAN, d4$LOKACIJA_OZLEDA)
chisq.test(d4$USPESNO_IMUNIZOVAN, d4$LOKACIJA_OZLEDA, correct = TRUE)
d4 %>%
filter(!is.na(LOKACIJA_OZLEDA)) %>%
ggplot(aes(x=USPESNO_IMUNIZOVAN, fill=LOKACIJA_OZLEDA)) +
geom_bar() + ggtitle('Uspešnost imunizacije u odnosu na lokaciju ozlede') +
xlab('Uspešno imunizovan') + ylab('Frekvencija') +
scale_fill_discrete('Lokacija ozleda')
table(d4$USPESNO_IMUNIZOVAN, d4$ŽIVOTINJA)
chisq.test(d4$USPESNO_IMUNIZOVAN, d4$ŽIVOTINJA, correct = TRUE)
d4 %>%
filter(!is.na(ŽIVOTINJA)) %>%
ggplot(aes(x=USPESNO_IMUNIZOVAN, fill=ŽIVOTINJA)) +
geom_bar() + ggtitle('Uspešnost imunizacije u odnosu na životinju') +
xlab('Uspešno imunizovan') + ylab('Frekvencija') +
scale_fill_discrete('Životinja')
# USPESNO_IMUNIZOVAN i LOT_VAKCINE
table(d4$LOT_VAKCINE)
prop.table(table(d4$LOT_VAKCINE))
table(d4$USPESNO_IMUNIZOVAN, d4$LOT_VAKCINE)
chisq.test(d4$LOT_VAKCINE, d4$USPESNO_IMUNIZOVAN, correct=TRUE)
d4 %>%
filter(!is.na(LOT_VAKCINE)) %>%
ggplot(aes(x=USPESNO_IMUNIZOVAN, fill=LOT_VAKCINE)) +
geom_bar() + ggtitle('Uspešnost imunizacije u odnosu na lot vakcine') +
xlab('Uspešno imunizovan') + ylab('Frekvencija') +
scale_fill_discrete('Lot vakcine')
# USPESNO_IMUNIZOVAN i TITER
shapiro.test(d4$TITER)
wilcox.test(d4$TITER ~ d4$USPESNO_IMUNIZOVAN)
d4 %>%
filter(!is.na(TITER)) %>%
ggplot(aes(x= USPESNO_IMUNIZOVAN, y=TITER)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Uspešnost imunizacije u odnosu na potenciju vakcine') +
xlab('Uspešno imunizovan') +
ylab('Potencija vakcine')
shapiro.test(d4$REZULTAT_ANALIZE)
kruskal.test(d4$REZULTAT_ANALIZE ~ d4$GODINA)
#install.packages('FSA')
library(FSA)
d4 %>%
filter(!is.na(GODINA)) %>% filter(REZULTAT_ANALIZE < 15) %>%
ggplot(aes(x= as.factor(GODINA), y=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na godinu') +
xlab('Godina') +
ylab('Rezultat analize') +
ylim(0, 8)
wilcox.test(d4$REZULTAT_ANALIZE ~ d4$POL)
shapiro.test(d4$REZULTAT_ANALIZE)
kruskal.test(d4$REZULTAT_ANALIZE ~ d4$GODINA)
#install.packages('FSA')
library(FSA)
d4 %>%
filter(!is.na(GODINA)) %>% filter(REZULTAT_ANALIZE < 15) %>%
ggplot(aes(x= as.factor(GODINA), y=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na godinu') +
xlab('Godina') +
ylab('Rezultat analize') +
ylim(0, 8)
+
ylab('Rezult
d4 %>%
filter(!is.na(POL)) %>%
ggplot(aes(x= POL, y=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na pol') +
xlab('Pol') +
ylab('Rezultat analize') +
ylim(0,8)
wilcox.test(d4$REZULTAT_ANALIZE ~ d4$POL)
d4 %>%
filter(!is.na(POL)) %>%
ggplot(aes(x= POL, y=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na pol') +
xlab('Pol') +
ylab('Rezultat analize') +
ylim(0,8)
cor.test(d5$REZULTAT_ANALIZE, d5$STAROST, method='pearson')
d4 %>%
filter(!is.na(GODINA_ROĐENJA)) %>%
# filter(REZULTAT_ANALIZE < 15) %>%
ggplot(aes(x= STAROST, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Skater dijagram Starosti i Rezultata analize') +
xlab('Starost') +
ylab('Rezultat analize') +
ylim(0,15)
cor.test(d4$REZULTAT_ANALIZE, d4$STAROST, method='pearson')
d4 %>%
#filter(!is.na(USTANOVA_POSILJALAC_UZORKA)) %>%
ggplot(aes(y= USTANOVA_POSILJALAC_UZORKA, x=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na ustanovu') +
xlab('Rezultat analize') +
ylab('Ustanova') +
xlim(0, 10)
d4 %>%
filter(!is.na(TRAJANJE_VAKCINACIJE)) %>%
ggplot(aes(x= TRAJANJE_VAKCINACIJE, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i trajanja vakcinacije') +
xlab('Trajanje vakcinacije (dani)') +
ylab('Rezultat analize')
View(model1.1)
cor.test(d4$REZULTAT_ANALIZE, d4$RAZLIKA_PRIJEMA_I_UZORKOVANJA, method='pearson')
d4 %>%
filter(!is.na(RAZLIKA_PRIJEMA_I_UZORKOVANJA)) %>%
ggplot(aes(x= RAZLIKA_PRIJEMA_I_UZORKOVANJA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i razlike prijema i uzorkovanja') +
xlab('Razlika prijema i uzorkovanja (dani)') +
ylab('Rezultat analize') +
ylim(0, 15)
d4 %>%
filter(!is.na(RAZLIKA_PRIJEMA_I_UZORKOVANJA)) %>%
ggplot(aes(x= RAZLIKA_PRIJEMA_I_UZORKOVANJA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i razlike prijema i uzorkovanja') +
xlab('Razlika prijema i uzorkovanja (dani)') +
ylab('Rezultat analize') +
ylim(0, 15)
cor.test(d4$REZULTAT_ANALIZE, d4$RAZLIKA_PRIJEMA_I_POCETKA, method='pearson')
d4 %>%
filter(!is.na(RAZLIKA_PRIJEMA_I_POCETKA)) %>%
ggplot(aes(x= RAZLIKA_PRIJEMA_I_POCETKA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i razlike prijema i početka') +
xlab('Razlika prijema i početka (dani)') +
ylab('Rezultat analize') +
ylim(0, 30)
cor.test(d4$REZULTAT_ANALIZE, d4$RAZLIKA_UZORKOVANJA_I_POCETKA, method='pearson')
d4 %>%
filter(!is.na(RAZLIKA_UZORKOVANJA_I_POCETKA)) %>%
ggplot(aes(x= RAZLIKA_UZORKOVANJA_I_POCETKA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i razlike uzorkovanja i početka') +
xlab('Razlika uzorkovanja i početka (dani)') +
ylab('Rezultat analize') +
ylim(0, 15)
cor.test(d4$REZULTAT_ANALIZE, d4$RAZLIKA_POCETKA_VAK_I_ISPITIVANJA, method='pearson')
d4 %>%
filter(!is.na(RAZLIKA_POCETKA_VAK_I_ISPITIVANJA)) %>%
ggplot(aes(x= RAZLIKA_POCETKA_VAK_I_ISPITIVANJA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i razlike početka vakcinacije i početka analize') +
xlab('Razlika početka vakcinacije i početka analize (dani)') +
ylab('Rezultat analize') +
ylim(0, 15)
compute.eval.metrics <- function(cm) {
TP <- cm[2,2]
TN <- cm[1,1]
FP <- cm[1,2]
FN <- cm[2,1]
acc <- (TP + TN) / (TP + TN + FP + FN)
prec <- TP / (TP + FP)
recall <- TP / (TP + FN)
f1 <- 2 * (prec * recall) / (prec + recall)
c(accuracy = acc, precision = prec, recall = recall, f1 = f1)
}
d4 %>%
filter(!is.na(DAT_SERUM)) %>%
ggplot(aes(x= DAT_SERUM, y=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na davanje seruma') +
xlab('Dat serum') +
ylab('Rezultat analize') +
ylim(0, 15)
d4 %>%
filter(!is.na(LOKACIJA_OZLEDA)) %>%
ggplot(aes(y= LOKACIJA_OZLEDA, x=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u lokaciju ozlede') +
xlab('Rezultat analize') +
ylab('Lokacija ozlede') +
xlim(0, 11)
cor.test(d4$REZULTAT_ANALIZE, as.numeric(d4$BROJ_OZLEDA), method='pearson')
kruskal.test(d4$REZULTAT_ANALIZE ~ d4$BROJ_OZLEDA)
d4 %>%
filter(!is.na(BROJ_OZLEDA)) %>%
ggplot(aes(x= BROJ_OZLEDA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i broja jedinica') +
xlab('Broj jedinica') +
ylab('Rezultat analize')
cor.test(d4$REZULTAT_ANALIZE, as.numeric(d4$BROJ_OZLEDA), method='pearson')
kruskal.test(d4$REZULTAT_ANALIZE ~ d4$BROJ_OZLEDA)
d4 %>%
filter(!is.na(BROJ_OZLEDA)) %>%
ggplot(aes(x= BROJ_OZLEDA, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i broja ozleda') +
xlab('Broj broj ozleda') +
ylab('Rezultat analize')
d4 %>%
filter(!is.na(ŽIVOTINJA)) %>%
ggplot(aes(y= ŽIVOTINJA, x=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na lokaciju ozlede') +
xlab('Rezultat analize') + xlim(0, 11) +
ylab('Lokacija ozlede')
d4 %>%
filter(!is.na(TITER)) %>%
ggplot(aes(x= TITER, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i potencije vakcine') +
xlab('Potencija vakcine') +
ylab('Rezultat analize')
d4 %>%
#filter(!is.na(USTANOVA_POSILJALAC_UZORKA)) %>%
ggplot(aes(y= LOT_VAKCINE, x=REZULTAT_ANALIZE)) +
geom_boxplot(outlier.shape = NA) +
ggtitle('Rezultat analize u odnosu na lot vakcine') +
xlab('Rezultat analize') +
ylab('Lot vakcine') + xlim(0, 10)
d4 %>%
filter(!is.na(TITER)) %>%
ggplot(aes(x= TITER, y=REZULTAT_ANALIZE)) +
geom_point() +
ggtitle('Korelacija rezultata analize i potencije vakcine') +
xlab('Potencija vakcine') +
ylab('Rezultat analize')
lapply(d4, class)
#Izmena klase potrebnih varijali
d4$POL <- as.factor(d4$POL)
d4$USPESNO_IMUNIZOVAN <- as.factor(d4$USPESNO_IMUNIZOVAN)
d4$GODINA <- as.factor(d4$GODINA)
d4$MESTO_PACIJENTA <- as.factor(d4$MESTO_PACIJENTA)
d4$USTANOVA_POSILJALAC_UZORKA <- as.factor(d4$USTANOVA_POSILJALAC_UZORKA)
d4$DAT_SERUM <- as.factor(d4$DAT_SERUM)
d4$LOKACIJA_OZLEDA <- as.factor(d4$LOKACIJA_OZLEDA)
d4$ŽIVOTINJA <- as.factor(d4$ŽIVOTINJA)
#install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
x <- select(d, contains('RAZLIKA'))
chart.Correlation(x)
library(MASS)
model1 <- glm(USPESNO_IMUNIZOVAN ~ STAROST +
USTANOVA_POSILJALAC_UZORKA + BROJ_JEDINICA
+ DAT_SERUM
,family = binomial(link = "logit"), data=d4)
summary(model1)
#Model nakon uklanjanja neznacajnih varijabli
model2 <- glm(USPESNO_IMUNIZOVAN ~ STAROST +
USTANOVA_POSILJALAC_UZORKA
,family = binomial(link = "logit"), data=d4)
summary(model2)
#Naredno uklanjanje neznacajnih varijabli
model3 <- glm(USPESNO_IMUNIZOVAN ~ STAROST
,family = binomial(link = "logit"), data=d4)
summary(model3)
library(caret)
set.seed(123)
train.indices <- createDataPartition(d4$USPESNO_IMUNIZOVAN, p=0.8, list = FALSE)
train.indices
traindata <- d[train.indices,]
testdata <- d[-train.indices,]
traindata$USPESNO_IMUNIZOVAN <- as.character(traindata$USPESNO_IMUNIZOVAN)
traindata$USPESNO_IMUNIZOVAN <- replace(traindata$USPESNO_IMUNIZOVAN,
which(traindata$USPESNO_IMUNIZOVAN == "Da"), 1)
traindata$USPESNO_IMUNIZOVAN <- replace(traindata$USPESNO_IMUNIZOVAN,
which(traindata$USPESNO_IMUNIZOVAN == "Ne"), 0)
traindata$USPESNO_IMUNIZOVAN <- as.numeric(traindata$USPESNO_IMUNIZOVAN)
traindata$USPESNO_IMUNIZOVAN
testdata$USPESNO_IMUNIZOVAN <- as.character(testdata$USPESNO_IMUNIZOVAN)
testdata$USPESNO_IMUNIZOVAN <- replace(testdata$USPESNO_IMUNIZOVAN,
which(testdata$USPESNO_IMUNIZOVAN == "Da"), 1)
testdata$USPESNO_IMUNIZOVAN <- replace(testdata$USPESNO_IMUNIZOVAN,
which(testdata$USPESNO_IMUNIZOVAN == "Ne"), 0)
testdata$USPESNO_IMUNIZOVAN <- as.numeric(testdata$USPESNO_IMUNIZOVAN)
testdata$USPESNO_IMUNIZOVAN
compute.eval.metrics <- function(cm) {
TP <- cm[2,2]
TN <- cm[1,1]
FP <- cm[1,2]
FN <- cm[2,1]
acc <- (TP + TN) / (TP + TN + FP + FN)
prec <- TP / (TP + FP)
recall <- TP / (TP + FN)
f1 <- 2 * (prec * recall) / (prec + recall)
c(accuracy = acc, precision = prec, recall = recall, f1 = f1)
}
model1 <- glm(USPESNO_IMUNIZOVAN ~ STAROST +
USTANOVA_POSILJALAC_UZORKA + DAT_SERUM
, family = binomial(link = "logit"), data=traindata)
model2 <- glm(USPESNO_IMUNIZOVAN ~ STAROST + USTANOVA_POSILJALAC_UZORKA
, family = binomial(link = "logit"), data=traindata)
summary(model1)
model3 <- glm(USPESNO_IMUNIZOVAN ~ STAROST
,family = binomial(link = "logit"), data=traindata)
summary(model3)
model4<- glm(USPESNO_IMUNIZOVAN ~ USTANOVA_POSILJALAC_UZORKA
,family = binomial(link = "logit"), data=traindata)
summary(model4)
# Metrika prvog modela
model1predict <- predict(model1, newdata = testdata)
model1predict <- ifelse(model1predict > 0.5,1,0)
model1predict
model1.cm <- table(prave.vrednosti=testdata$USPESNO_IMUNIZOVAN,
predvidjene.vrednosti=model1predict)
model1.cm
compute.eval.metrics(model1.cm)
#Metrika drugog modela
model2predict <- predict(model2, newdata = testdata)
model2predict <- ifelse(model2predict > 0.5,1,0)
model2predict
model1.cm
# Metrika prvog modela
model1predict <- predict(model1, newdata = testdata)
model1predict <- ifelse(model1predict > 0.5,1,0)
model1predict
model1.cm <- table(prave.vrednosti=testdata$USPESNO_IMUNIZOVAN,
predvidjene.vrednosti=model1predict)
model1.cm
compute.eval.metrics(model1.cm)
model1 <- glm(USPESNO_IMUNIZOVAN ~ STAROST +
USTANOVA_POSILJALAC_UZORKA + DAT_SERUM
, family = binomial(link = "logit"), data=traindata)
model2 <- glm(USPESNO_IMUNIZOVAN ~ STAROST + USTANOVA_POSILJALAC_UZORKA
, family = binomial(link = "logit"), data=traindata)
summary(model1)
model3 <- glm(USPESNO_IMUNIZOVAN ~ STAROST
,family = binomial(link = "logit"), data=traindata)
summary(model3)
model4<- glm(USPESNO_IMUNIZOVAN ~ USTANOVA_POSILJALAC_UZORKA
,family = binomial(link = "logit"), data=traindata)
summary(model4)
# Metrika prvog modela
model1predict <- predict(model1, newdata = testdata)
model1predict <- ifelse(model1predict > 0.5,1,0)
model1predict
model1.cm <- table(prave.vrednosti=testdata$USPESNO_IMUNIZOVAN,
predvidjene.vrednosti=model1predict)
model1.cm
compute.eval.metrics(model1.cm)
#Metrika drugog modela
model2predict <- predict(model2, newdata = testdata)
model2predict <- ifelse(model2predict > 0.5,1,0)
model2predict
model2.cm <- table(prave.vrednosti=testdata$USPESNO_IMUNIZOVAN,
predvidjene.vrednosti=model2predict)
model2.cm
compute.eval.metrics(model2.cm)
#Metrika treceg modela
model3predict <- predict(model3, newdata = testdata)
model3predict <- ifelse(model3predict > 0.5,1,0)
model3predict
model3.cm <- table(prave.vrednosti=testdata$USPESNO_IMUNIZOVAN,
predvidjene.vrednosti=model3predict)
model3.cm
#Metrika cetvrtog modela
model4predict <- predict(model4, newdata = testdata)
model4predict <- ifelse(model4predict > 0.5,1,0)
model4predict
model4.cm <- table(prave.vrednosti=testdata$USPESNO_IMUNIZOVAN,
predvidjene.vrednosti=model4predict)
model4.cm
