library(readxl)
library(ggplot2)
#Ucitavanje podataka
data <- read_excel("data/data.xlsx")
View(data)
#Selekcija potrebnih kolona
data <- subset(data, select = c(GODINA, ID, BROJ_LAB_PROTOKOLA, POL,
GODINA_ROĐENJA, MESTO_PACIJENTA,
USTANOVA_POSILJALAC_UZORKA, TRAJANJE_VAKCINACIJE,
RAZLIKA_ZAVRŠETKA_I_BUSTERA,
RAZLIKA_PRIJEMA_I_UZORKOVANJA,
RAZLIKA_PRIJEMA_I_POCETKA,
RAZLIKA_UZORKOVANJA_I_POCETKA,
UKUPNO_DANA_OD_VADJENJA_KRVI,
NAPOMENA,REZULTAT_ANALIZE,USPESNO_IMUNIZOVAN,
DAT_SERUM,BROJ_JEDINICA,SERIJA_SERUMA,
LOT_VAKCINE,LOKACIJA_OZLEDA,BROJ_OZLEDA,
ŽIVOTINJA))
library(tidyr)
paste("Broj nedostajucih u varijabli REZULTAT_ANALIZE:",
sum(is.na(data$REZULTAT_ANALIZE)))
#Uklanjanje reda sa nedostajucim podatkom u REZULTAT_ANALIZE varijabli
data <- data %>% drop_na(REZULTAT_ANALIZE)
paste("Broj nedostajucih u varijabli REZULTAT_ANALIZE:",
sum(is.na(data$REZULTAT_ANALIZE)))
paste("Broj nedostajucih u varijabli USPESNO_IMUNIZOVAN:",
sum(is.na(data$USPESNO_IMUNIZOVAN)))
library(readxl)
library(ggplot2)
#Ucitavanje podataka
data <- read_excel("data/data.xlsx")
View(data)
#Selekcija potrebnih kolona
data <- subset(data, select = c(GODINA, ID, BROJ_LAB_PROTOKOLA, POL,
GODINA_ROĐENJA, MESTO_PACIJENTA,
USTANOVA_POSILJALAC_UZORKA, TRAJANJE_VAKCINACIJE,
RAZLIKA_ZAVRŠETKA_I_BUSTERA,
RAZLIKA_PRIJEMA_I_UZORKOVANJA,
RAZLIKA_PRIJEMA_I_POCETKA,
RAZLIKA_UZORKOVANJA_I_POCETKA,
UKUPNO_DANA_OD_VADJENJA_KRVI,
NAPOMENA,REZULTAT_ANALIZE,USPESNO_IMUNIZOVAN,
DAT_SERUM,BROJ_JEDINICA,SERIJA_SERUMA,
LOT_VAKCINE,LOKACIJA_OZLEDA,BROJ_OZLEDA,
ŽIVOTINJA))
#Uklanjanje redova sa nedostajucim podacima na zavisnim varijablama
library(tidyr)
paste("Broj nedostajucih u varijabli REZULTAT_ANALIZE:",
sum(is.na(data$REZULTAT_ANALIZE)))
#Uklanjanje reda sa nedostajucim podatkom u REZULTAT_ANALIZE varijabli
data <- data %>% drop_na(REZULTAT_ANALIZE)
paste("Broj nedostajucih u varijabli REZULTAT_ANALIZE:",
sum(is.na(data$REZULTAT_ANALIZE)))
paste("Broj nedostajucih u varijabli USPESNO_IMUNIZOVAN:",
sum(is.na(data$USPESNO_IMUNIZOVAN)))
data[~data.LOT_VAKCINE.str.contains(",")]
data <-  data[~data['LOT_VAKCINE'].isin([','])]
data <- data[~data['LOT_VAKCINE'].isin(',')]
library(readxl)
library(ggplot2)
#Ucitavanje podataka
data <- read_excel("data/data.xlsx")
View(data)
#Selekcija potrebnih kolona
data <- subset(data, select = c(GODINA, ID, BROJ_LAB_PROTOKOLA, POL,
GODINA_ROĐENJA, MESTO_PACIJENTA,
USTANOVA_POSILJALAC_UZORKA, TRAJANJE_VAKCINACIJE,
RAZLIKA_ZAVRŠETKA_I_BUSTERA,
RAZLIKA_PRIJEMA_I_UZORKOVANJA,
RAZLIKA_PRIJEMA_I_POCETKA,
RAZLIKA_UZORKOVANJA_I_POCETKA,
UKUPNO_DANA_OD_VADJENJA_KRVI,
NAPOMENA,REZULTAT_ANALIZE,USPESNO_IMUNIZOVAN,
DAT_SERUM,BROJ_JEDINICA,SERIJA_SERUMA,
LOT_VAKCINE,LOKACIJA_OZLEDA,BROJ_OZLEDA,
ŽIVOTINJA))
library(tidyr)
paste("Broj nedostajucih u varijabli REZULTAT_ANALIZE:",
sum(is.na(data$REZULTAT_ANALIZE)))
#Uklanjanje reda sa nedostajucim podatkom u REZULTAT_ANALIZE varijabli
data <- data %>% drop_na(REZULTAT_ANALIZE)
paste("Broj nedostajucih u varijabli REZULTAT_ANALIZE:",
sum(is.na(data$REZULTAT_ANALIZE)))
paste("Broj nedostajucih u varijabli USPESNO_IMUNIZOVAN:",
sum(is.na(data$USPESNO_IMUNIZOVAN)))
data_subset <- data[grep(~",", data$LOT_VAKCINE),]
View(data_subset)
data_subset <- data[grep("~,", data$LOT_VAKCINE),]
View(data_subset)
data_subset <- data[grep(",", data$LOT_VAKCINE),]
View(data_subset)
data_subset <- data[grep(~",", data$LOT_VAKCINE),]
data_subset <- data[~grep(",", data$LOT_VAKCINE),]
data_subset <- data[~grep(",", data$LOT_VAKCINE),]
data_subset <- data[grep(",", data$LOT_VAKCINE),]
data_subset <- data[grep(",", data$LOT_VAKCINE),]
library(dplyr)
library(stringr)
library(dplyr)
d <- data %>%
filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
~filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ~","))
d <- data %>%
filter(str_detect(LOT_VAKCINE, "~,"))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(~str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(str_detect(~LOT_VAKCINE, ","))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(str_detect(LOT_VAKCINE, "..,"))
d <- data %>%
filter(str_detect(LOT_VAKCINE, "..,"))
d <- data %>%
filter(str_detect(LOT_VAKCINE, "~,"))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ",,,,"))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ",,,,"))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
drop(filter(str_detect(LOT_VAKCINE, ",")))
d <- data[-filter(str_detect(LOT_VAKCINE, ",")), ]
d <- data[-filter(str_detect(data$LOT_VAKCINE, ",")), ]
data[-c(filter(str_detect(data$LOT_VAKCINE, ","))),]
d <- data %>%
filter~(str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(~str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ~","))
filter(data, LOT_VAKCINE != str_detect",")
filter(data, LOT_VAKCINE != str_detect(","))
d <- data %>%
!filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
!filter(str_detect(LOT_VAKCINE, ","))
d <- data %>%
filter(str_detect(LOT_VAKCINE, ","))
d <- data[!grepl(',', data$LOT_VAKCINE),]
view(d)
data.frame(d)
d$LOT_VAKCINE
d <- data[!grepl(';', data$LOT_VAKCINE),]
d <- data[!grepl(';', data$LOT_VAKCINE),]
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d$LOT_VAKCINE
range(d$LOT_VAKCINE)
categories <- unique(d$LOT_VAKCINE)
categories
d <- data
categories <- unique(d$LOT_VAKCINE)
categories
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
categories <- unique(d$LOT_VAKCINE)
categories
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('?', d$LOT_VAKCINE),]
categories <- unique(d$LOT_VAKCINE)
categories
categories <- unique(d$LOT_VAKCINE)
categories
d <- data
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('?', d$LOT_VAKCINE),]
view(d)
data.frame(d)
categories <- unique(d$LOT_VAKCINE)
categories
d <- data
d <- data[!grepl(',', data$LOT_VAKCINE),]
categories <- unique(d$LOT_VAKCINE)
categories
d <- d[!grepl(';', d$LOT_VAKCINE),]
categories <- unique(d$LOT_VAKCINE)
categories
d <- d[!grepl('?', d$LOT_VAKCINE),]
categories <- unique(d$LOT_VAKCINE)
categories
d <- data
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('\\?', d$LOT_VAKCINE),]
view(d)
data.frame(d)
categories <- unique(d$LOT_VAKCINE)
categories
data_d <- data[grep(";", data$LOT_VAKCINE),]
####
data_c <- data[grep(",", data$LOT_VAKCINE),]
data_q <-  data[grep("?", data$LOT_VAKCINE),]
data_q <-  data[grep("\\?", data$LOT_VAKCINE),]
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('\\?', d$LOT_VAKCINE),]
d <- data[!grepl(',', data$LOT_VAKCINE) | !grepl(';', data$LOT_VAKCINE),]
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('\\?', d$LOT_VAKCINE),]
data_nelot <- rbind(data_c, data_d, data_q)
662 -43
view(data_nelot)
View(data_nelot)
unique(d$LOT_VAKCINE)
# Uzimanje ispitanika koji nemaju odgovarajuci lot vakcine
data_c <- data[grep(",", data$LOT_VAKCINE),]
data_d <- data[grep(";", data$LOT_VAKCINE),]
data_q <-  data[grep("\\?", data$LOT_VAKCINE),]
data_nelot <- rbind(data_c, data_d, data_q)
View(data_nelot)
library(stringr)
library(dplyr)
library(stringr)
library(stringr)
library(dplyr)
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('\\?', d$LOT_VAKCINE),]
unique(d$LOT_VAKCINE)
unique(data$LOT_VAKCINE)
apply(X = d,
FUN = unique,
MARGIN = 2)
d<-replace(d$ŽIVOTINJA, "MA;KA", "MAČKA")
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('\\?', d$LOT_VAKCINE),]
d<-d[replace(d$ŽIVOTINJA, "MA;KA", "MAČKA"),]
unique(d$ŽIVOTINJA)
d <- data[!grepl(',', data$LOT_VAKCINE),]
d <- d[!grepl(';', d$LOT_VAKCINE),]
d <- d[!grepl('\\?', d$LOT_VAKCINE),]
d$ŽIVOTINJA <- replace(d$ŽIVOTINJA, "MA;KA", "MAČKA")
MA;KA
a <- replace(d$ŽIVOTINJA, "MA;KA", "MAČKA")
a
unique(a)
apply(X = d,
FUN = unique,
MARGIN = 2) #MARGIN = 2, funckija se primenjuje na KOLONE df-a
apply(X = d,
FUN = unique,
MARGIN = 2) #MARGIN = 2, funckija se primenjuje na KOLONE df-a
